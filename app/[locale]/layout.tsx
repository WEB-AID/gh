// app/layout.tsx
import type { Metadata } from 'next'
import localFont from 'next/font/local'
import Header from '../../components/Header/Header'
import Footer from '../../components/Footer/Footer'
import './globals.css'
import { Suspense } from 'react'
import Loading from './loading'
import TranslationsProvider from '@/components/TranslationsProvider'
import initTranslations from '../i18n'

const geistSans = localFont({
    src: './fonts/GeistVF.woff',
    variable: '--font-geist-sans',
    weight: '100 900',
})

const geistMono = localFont({
    src: './fonts/GeistMonoVF.woff',
    variable: '--font-geist-mono',
    weight: '100 900',
})

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
}

export default async function RootLayout({
    children,
    params,
}: Readonly<{
    children: React.ReactNode
    params: { locale: string } // Добавляем параметры
}>) {
    // Получаем текущую локаль и инициализируем переводы
    const { locale } = await params
    const i18nNamespaces = ['common', 'footerMenu', 'headerMenu'] // Задаем необходимые пространства имен для лейаута
    const { resources } = await initTranslations(locale, i18nNamespaces)

    return (
        <html lang={locale}>
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased`}
            >
                <TranslationsProvider
                    locale={locale}
                    namespaces={i18nNamespaces}
                    resources={resources}
                >
                    <Header />
                    <Suspense fallback={<Loading />}>
                        <div className="pt-24 lg:pt-32">{children}</div>
                    </Suspense>
                    <Footer />
                </TranslationsProvider>
            </body>
        </html>
    )
}
